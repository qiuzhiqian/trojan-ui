import { Button, VerticalBox, HorizontalBox, LineEdit, Switch } from "std-widgets.slint";

import { SimpleSwitch } from "./widgets/simple-switch.slint";

struct ClientMeta {
    remarks: string,
    server: string,
    server_port: int,
    client: string,
    client_port: int,
    sni: string,
    password: string,
    verify: bool,
}

export component ClientSettings inherits VerticalBox {
    in-out property <string> path;
    in-out property<string> remarks <=> remarks.text;
    in-out property<string> server <=> server.text;
    in-out property<string> server_port <=> server_port.text;
    in-out property<string> client <=> client.text;
    in-out property<string> client_port <=> client_port.text;
    in-out property<string> sni <=> sni.text;
    in-out property<string> password <=> password.text;
    in-out property<bool> verify <=> verify.checked;
    callback confirm(bool, string);

    remarks := LineEdit {
        font-size: 14px;
        width: 100%;
        placeholder-text: @tr("remarks");
    }
    server := LineEdit {
        font-size: 14px;
        width: 100%;
        placeholder-text: @tr("server address");
    }
    server_port := LineEdit {
        font-size: 14px;
        width: 100%;
        input-type: number;
        placeholder-text: @tr("server port");
    }
    client := LineEdit {
        font-size: 14px;
        width: 100%;
        placeholder-text: @tr("client address");
    }
    client_port := LineEdit {
        font-size: 14px;
        width: 100%;
        input-type: InputType.number;
        placeholder-text: @tr("client port");
    }
    sni := LineEdit {
        font-size: 14px;
        width: 100%;
        placeholder-text: @tr("sni");
    }
    password := LineEdit {
        font-size: 14px;
        width: 100%;
        input-type: InputType.password;
        placeholder-text: @tr("password");
    }
    //verify := SimpleSwitch {
    //    width: 100%;
    //    text-color: Colors.white;
    //    text: @tr("Verify");
    //}
    HorizontalBox{
        Text {
            text: @tr("Verify");
            font-size: 16px;
            color: Colors.white;
        }
        Rectangle {
        }
        verify := SimpleSwitch {}
    }
    Rectangle{}
    Button {
        text: @tr("Confirm");
        clicked => {
            root.confirm(true, path);
        }
    }
}

export {ClientMeta}